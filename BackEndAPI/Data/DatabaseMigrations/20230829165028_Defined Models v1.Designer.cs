// <auto-generated />
using BackEndAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndAPI.Data.DatabaseMigrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230829165028_Defined Models v1")]
    partial class DefinedModelsv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("BackEndAPI.Data.Models.Case", b =>
                {
                    b.Property<int>("CaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Totalneeded")
                        .HasColumnType("INTEGER");

                    b.HasKey("CaseId");

                    b.HasIndex("CharityId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("BackEndAPI.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("passwordhash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("usertype")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BackEndAPI.Data.Models.Charity", b =>
                {
                    b.HasBaseType("BackEndAPI.Data.Models.User");

                    b.Property<string>("charityname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("phonenumber")
                        .HasColumnType("INTEGER");

                    b.ToTable("Users", t =>
                        {
                            t.Property("phonenumber")
                                .HasColumnName("Charity_phonenumber");
                        });

                    b.HasDiscriminator().HasValue("Charity");
                });

            modelBuilder.Entity("BackEndAPI.Data.Models.Donator", b =>
                {
                    b.HasBaseType("BackEndAPI.Data.Models.User");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("phonenumber")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Donator");
                });

            modelBuilder.Entity("BackEndAPI.Data.Models.Case", b =>
                {
                    b.HasOne("BackEndAPI.Data.Models.Charity", "TheCharity")
                        .WithMany("Cases")
                        .HasForeignKey("CharityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TheCharity");
                });

            modelBuilder.Entity("BackEndAPI.Data.Models.Charity", b =>
                {
                    b.Navigation("Cases");
                });
#pragma warning restore 612, 618
        }
    }
}
